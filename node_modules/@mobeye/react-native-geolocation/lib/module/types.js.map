{"version":3,"sources":["types.ts"],"names":["LocationError"],"mappings":"AAAA;;;;;;;;;AASA;;;AAGA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;AAAAA,EAAAA,a,CAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["/**\n * Copyright (c) Mobeye.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n/**\n * iOS location error, android seems to never throw errors\n */\nexport enum LocationError {\n    locationUnknown = 0, // simple error the service will keep trying\n    denied = 1, // user unauthorized location update\n    headingFailure= 3, // heading could not be determined because of strong interference from nearby magnetic fields\n}\n\n/**\n * Accuracy authorization levels\n */\nexport type AccuracyAuthorization = \"FullAccuracy\" | \"ReducedAccuracy\";\n\n/**\n * Different types of accuracy\n */\nexport type AccuracyLevel = \"PowerSaving\" | \"BalancedPower\" | \"BestAccuracy\" | \"NavigationAccuracy\";\n\nexport type LocationConfiguration = {\n    desiredAccuracy: AccuracyLevel,\n    distanceFilter: number,\n    updateInterval: number,\n    bufferSize: number,\n}\n\nexport type Location = {\n    latitude: number;\n    longitude: number;\n    accuracy: number;\n    time: number;\n    mock: boolean;\n}\n\nexport type LocationEventSuccess = {\n    success: true;\n    payload: Location;\n}\n\nexport type LocationEventError = {\n    success: false;\n    payload: LocationError;\n}\n\nexport type LocationEvent = LocationEventSuccess | LocationEventError;\n\nexport type LocationProvidersStatus ={\n    isGPSLocationEnabled: boolean;\n    isNetworkLocationEnabled: boolean\n}\n"]}